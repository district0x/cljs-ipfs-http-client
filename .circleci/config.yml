version: 2.1
jobs:
  test:
    working_directory: ~/ci
    docker:
      # Primary container image where all steps run.
      - image: 487920318758.dkr.ecr.us-west-2.amazonaws.com/cljs-web3-ci:latest
        aws_auth:
            aws_access_key_id: $AWS_ACCESS_KEY_ID
            aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
      # Secondary container image on common network.
      - image: ipfs/go-ipfs
    steps:
      - checkout
      - restore_cache:
          name: Restore npm package cache
          keys:
            - npm-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install node modules
          command: yarn install
      - save_cache:
          name: Save npm package cache
          key: npm-packages-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules/
      - run:
          name: Compile Node tests
          command: npx shadow-cljs compile test-node
      - run:
          name: Run Node tests
          command: node out/node-tests.js
      - run:
          name: Compile Browser (karma) tests
          command: npx shadow-cljs compile test-ci
      # Disabled karma tests until I figure out why they fail on CI (pass locally)
      # - run:
      #     name: Run Browser (karma) tests
      #     command: CHROME_BIN=`which chromium-browser` npx karma start karma.conf.js --single-run

  deploy:
    working_directory: ~/ci

    docker:
      - image: 487920318758.dkr.ecr.us-west-2.amazonaws.com/cljs-web3-ci:latest
        aws_auth:
            aws_access_key_id: $AWS_ACCESS_KEY_ID
            aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    steps:
      - checkout
      - run:
          name: Build JAR
          command: clojure -T:build jar
      - run:
          name: Release to clojars
          command: clojure -T:build deploy

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master
